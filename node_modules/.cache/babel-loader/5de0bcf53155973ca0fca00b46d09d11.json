{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Portfolio.js\";\nimport React, { useState } from 'react';\nimport Stock from './Stock';\nimport NavBar from './NavBar';\nimport '../css/portfolio.css';\nimport { APIKEY, SANDBOXURL, VERSION } from '../constants';\n\nfunction Portfolio(props) {\n  const [ticker, setTicker] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [validTicker, setValidTicker] = useState(true);\n  const [validCash, setValidCash] = useState(true);\n\n  const handlePurchase = e => {\n    e.preventDefault();\n    getLatestPrice(ticker);\n  };\n\n  const resetErrorMessages = () => {\n    setValidTicker(true);\n    setValidCash(true);\n    setPrice(\"\");\n  };\n\n  const getLatestPrice = stock => {\n    fetch(SANDBOXURL + VERSION + `stock/${stock}/price?token=${APIKEY}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(stockPrice => {\n      setValidTicker(true);\n      setPrice(stockPrice);\n\n      if (stockPrice * quantity > props.user.cash) {\n        setValidCash(false);\n      }\n\n      console.log(price);\n    }).catch(error => {\n      setValidTicker(false);\n      console.log(error);\n    });\n  };\n\n  const renderOwnedStocks = () => {\n    let testing = [];\n\n    for (let i = 0; i < 10; ++i) {\n      testing.push(React.createElement(Stock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n\n    return testing;\n  };\n\n  const convertNumToCurrencyFormat = price => {\n    return number.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, Object.keys(props.user).length !== 0 && // check if user is loggedIn\n  React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"header\", {\n    className: \"portfolioHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" Portfolio ($\", \") \"), React.createElement(\"div\", {\n    className: \"portfolioContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stocksContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stocksList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, renderOwnedStocks())), React.createElement(\"div\", {\n    className: \"portfolioDivider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"purchaseContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"wallet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Cash - $\", props.user.cash), React.createElement(\"form\", {\n    className: \"purchaseForm\",\n    onClick: () => resetErrorMessages(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"purchaseField\",\n    type: \"text\",\n    placeholder: \"Ticker\",\n    value: ticker,\n    onChange: e => setTicker(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"purchaseField\",\n    type: \"text\",\n    placeholder: \"Qty\",\n    value: quantity,\n    onChange: e => setQuantity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), !validTicker && React.createElement(\"p\", {\n    className: \"purchaseErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"\\\"\", ticker, \"\\\" not found\"), !validCash && React.createElement(\"p\", {\n    className: \"purchaseErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"not enough cash, \", quantity, \" stock(s) of \", ticker, \" cost $\", convertNumToCurrencyFormat(price * quantity)), React.createElement(\"input\", {\n    className: \"purchaseButton\",\n    type: \"submit\",\n    value: \"Buy\",\n    onClick: e => handlePurchase(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))))));\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Portfolio.js"],"names":["React","useState","Stock","NavBar","APIKEY","SANDBOXURL","VERSION","Portfolio","props","ticker","setTicker","quantity","setQuantity","price","setPrice","validTicker","setValidTicker","validCash","setValidCash","handlePurchase","e","preventDefault","getLatestPrice","resetErrorMessages","stock","fetch","then","response","ok","json","stockPrice","user","cash","console","log","catch","error","renderOwnedStocks","testing","i","push","convertNumToCurrencyFormat","number","toLocaleString","style","currency","Object","keys","length","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Stock from './Stock';\nimport NavBar from './NavBar';\nimport '../css/portfolio.css';\nimport { APIKEY, SANDBOXURL,VERSION } from '../constants'\n\nfunction Portfolio(props) {\n    const [ticker, setTicker] = useState(\"\");\n    const [quantity, setQuantity] = useState(\"\");\n    const [price, setPrice] = useState(\"\");\n    const [validTicker, setValidTicker] = useState(true);\n    const [validCash, setValidCash] = useState(true);\n    \n\n    const handlePurchase = (e) => {\n        e.preventDefault();\n        getLatestPrice(ticker);\n    }\n\n    const resetErrorMessages = () => {\n        setValidTicker(true);\n        setValidCash(true);\n        setPrice(\"\");\n    }\n\n    const getLatestPrice = (stock) => {\n        fetch (SANDBOXURL + VERSION + `stock/${stock}/price?token=${APIKEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw response;\n        })\n        .then(stockPrice => {\n            setValidTicker(true);\n            setPrice(stockPrice);\n            if ((stockPrice * quantity) > props.user.cash) {\n                setValidCash(false);\n            }                \n            console.log(price);\n        })\n        .catch(error => {\n            setValidTicker(false);\n            console.log(error);\n        })\n    }\n\n    const renderOwnedStocks = () => {\n        let testing = [];\n        for (let i = 0; i < 10; ++i) {\n            testing.push(<Stock/>);\n        }\n        return testing;\n    }\n    const convertNumToCurrencyFormat = (price) => {\n        return number.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n    return (\n        <div>\n            { Object.keys(props.user).length !== 0 && (         // check if user is loggedIn\n                <div>\n                    <NavBar/>                \n                    <header className=\"portfolioHeader\"> Portfolio (${}) </header>\n                    <div className=\"portfolioContainer\">\n                        <div className=\"stocksContainer\">\n                            <div className=\"stocksList\">\n                                {renderOwnedStocks()}\n                            </div>\n                        </div>\n                        <div className=\"portfolioDivider\"></div>\n                        <div className=\"purchaseContainer\">\n                            <header id=\"wallet\">Cash - ${props.user.cash}</header>\n                            <form className=\"purchaseForm\" onClick={()=>resetErrorMessages()}>\n                                <input className=\"purchaseField\" type=\"text\" placeholder=\"Ticker\" value={ticker} onChange={e => setTicker(e.target.value)} />\n                                <input className=\"purchaseField\" type=\"text\" placeholder=\"Qty\" value={quantity} onChange={e => setQuantity(e.target.value)} />\n                                {!validTicker && <p className=\"purchaseErrorMessage\">\"{ticker}\" not found</p>}\n                                {!validCash && <p className=\"purchaseErrorMessage\">not enough cash, {quantity} stock(s) of {ticker} cost ${convertNumToCurrencyFormat(price*quantity)}</p>}\n                                <input className=\"purchaseButton\" type=\"submit\" value=\"Buy\" onClick={e => handlePurchase(e)}/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}