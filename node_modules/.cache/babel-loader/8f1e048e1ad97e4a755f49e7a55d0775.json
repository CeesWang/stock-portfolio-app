{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Login.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport '../css/login.css';\n\nfunction Login() {\n  const {\n    login,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm();\n  return React.createElement(\"div\", {\n    className: \"loginContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"loginForm\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"loginHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"login\"), React.createElement(\"input\", {\n    className: \"loginField\",\n    placeholder: \"name\",\n    name: \"name\",\n    ref: login({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), errors.name && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"name is required\"), React.createElement(\"input\", {\n    className: \"loginField\",\n    placeholder: \"email\",\n    name: \"email\",\n    ref: login({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"email is required\"), React.createElement(\"input\", {\n    className: \"loginField\",\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    ref: login({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"password is required\"), React.createElement(\"input\", {\n    className: \"loginField\",\n    type: \"password\",\n    placeholder: \"confirm password\",\n    name: \"confirmPassword\",\n    ref: login({\n      required: true,\n      validate: password => password === watch('password')\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), errors.confirmPassword && errors.confirmPassword.type === \"required\" && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"confirm password is required\"), errors.confirmPassword && errors.confirmPassword.type === \"validate\" && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"passwords do not match\"), React.createElement(\"input\", {\n    className: \"loginButton\",\n    type: \"submit\",\n    value: \"Sign UP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n} //     return (\n//         <div className=\"loginContainer\">\n//             <form className=\"loginForm\">\n//                 <header id=\"loginHeader\">Sign IN</header>\n//                 <input className=\"loginField\" type=\"text\" placeholder=\" email\" />\n//                 <input className=\"loginField\" type=\"text\" placeholder=\" password\" />\n//                 <input className=\"loginButton\" type=\"submit\" value=\"login\" />\n//                 <label className=\"loginSignup\">Don't have an account? <Link to=\"/signup\">Sign up now</Link></label>\n//             </form>     \n//         </div>\n//     );\n// }\n\n\nexport default Login;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Login.js"],"names":["React","useForm","Link","Login","login","handleSubmit","errors","watch","onSubmit","required","name","email","password","validate","confirmPassword","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport {Link} from 'react-router-dom';\nimport '../css/login.css'\n\nfunction Login () {\n    const { login, handleSubmit, errors, watch } = useForm();\n\n    return (\n        <div className=\"loginContainer\">\n          <form className=\"loginForm\" onSubmit={handleSubmit(onSubmit)}>\n              <header id=\"loginHeader\">login</header>\n              <input className=\"loginField\" placeholder=\"name\" name=\"name\" ref={login({ required: true})}/>\n              {errors.name && <p className=\"loginErrorMessage\">name is required</p>}\n              \n              <input className=\"loginField\" placeholder=\"email\" name=\"email\" ref={login({ required: true })} />\n              {errors.email && <p className=\"loginErrorMessage\">email is required</p>}\n          \n              <input className=\"loginField\" type=\"password\" placeholder=\"password\"name=\"password\" ref={login({ required:true })} />\n              {errors.password && <p className=\"loginErrorMessage\">password is required</p>}\n          \n              <input className=\"loginField\" type=\"password\" placeholder=\"confirm password\" name=\"confirmPassword\" ref={login({\n                  required: true,\n                  validate: password => password === watch('password')\n              })} />\n              {errors.confirmPassword && errors.confirmPassword.type === \"required\" && <p className=\"loginErrorMessage\">confirm password is required</p>}\n              {errors.confirmPassword && errors.confirmPassword.type === \"validate\" && <p className=\"loginErrorMessage\">passwords do not match</p>}\n  \n              <input className=\"loginButton\" type=\"submit\" value=\"Sign UP\" />\n          </form>\n      </div>\n    );\n  }\n//     return (\n//         <div className=\"loginContainer\">\n//             <form className=\"loginForm\">\n//                 <header id=\"loginHeader\">Sign IN</header>\n//                 <input className=\"loginField\" type=\"text\" placeholder=\" email\" />\n//                 <input className=\"loginField\" type=\"text\" placeholder=\" password\" />\n//                 <input className=\"loginButton\" type=\"submit\" value=\"login\" />\n//                 <label className=\"loginSignup\">Don't have an account? <Link to=\"/signup\">Sign up now</Link></label>\n//             </form>     \n//         </div>\n//     );\n// }\n\nexport default Login; "]},"metadata":{},"sourceType":"module"}