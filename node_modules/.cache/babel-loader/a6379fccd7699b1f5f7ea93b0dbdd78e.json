{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Register.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BASEBACKENDURL } from '../constants';\nimport '../css/register.css';\n\nfunction Register() {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm(); // initialise the hook\n\n  const onSubmit = data => {\n    createUser(data);\n  };\n\n  const createUser = userInfo => {\n    fetch(BASEBACKENDURL + \"users\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userInfo\n      })\n    }).then();\n  };\n\n  return React.createElement(\"div\", {\n    className: \"registerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"registerForm\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"registerHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    placeholder: \"name\",\n    name: \"name\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), errors.name && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"name is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    placeholder: \"email\",\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"email is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"password is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    type: \"password\",\n    placeholder: \"confirm password\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: true,\n      validate: password => password === watch('password')\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), errors.confirmPassword && errors.confirmPassword.type === \"required\" && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"confirm password is required\"), errors.confirmPassword && errors.confirmPassword.type === \"validate\" && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"passwords do not match\"), React.createElement(\"input\", {\n    className: \"registerButton\",\n    type: \"submit\",\n    value: \"Sign UP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })));\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Register.js"],"names":["React","useForm","BASEBACKENDURL","Register","register","handleSubmit","errors","watch","onSubmit","data","createUser","userInfo","fetch","method","headers","body","JSON","stringify","then","required","name","email","password","validate","confirmPassword","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BASEBACKENDURL } from '../constants';\nimport '../css/register.css';\nfunction Register() {\n  const { register, handleSubmit, errors, watch } = useForm(); // initialise the hook\n  const onSubmit = data => {\n    createUser(data); \n  };\n\n  const createUser = (userInfo) => {\n    fetch(BASEBACKENDURL + \"users\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userInfo\n      })\n    }).then()    \n  }\n\n  return (\n      <div className=\"registerContainer\">\n        <form className=\"registerForm\" onSubmit={handleSubmit(onSubmit)}>\n            <header id=\"registerHeader\">Register</header>\n            <input className=\"registerField\" placeholder=\"name\" name=\"name\" ref={register({ required: true})}/>\n            {errors.name && <p className=\"registerErrorMessage\">name is required</p>}\n            \n            <input className=\"registerField\" placeholder=\"email\" name=\"email\" ref={register({ required: true })} />\n            {errors.email && <p className=\"registerErrorMessage\">email is required</p>}\n        \n            <input className=\"registerField\" type=\"password\" placeholder=\"password\"name=\"password\" ref={register({ required:true })} />\n            {errors.password && <p className=\"registerErrorMessage\">password is required</p>}\n        \n            <input className=\"registerField\" type=\"password\" placeholder=\"confirm password\" name=\"confirmPassword\" ref={register({\n                required: true,\n                validate: password => password === watch('password')\n            })} />\n            {errors.confirmPassword && errors.confirmPassword.type === \"required\" && <p className=\"registerErrorMessage\">confirm password is required</p>}\n            {errors.confirmPassword && errors.confirmPassword.type === \"validate\" && <p className=\"registerErrorMessage\">passwords do not match</p>}\n\n            <input className=\"registerButton\" type=\"submit\" value=\"Sign UP\" />\n        </form>\n    </div>\n  );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}