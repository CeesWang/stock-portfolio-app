{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Register.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { BASEBACKENDURL, STARTCASH } from '../constants';\nimport '../css/register.css';\n\nfunction Register(props) {\n  const {\n    register,\n    handleSubmit,\n    errors,\n    watch\n  } = useForm(); // initialize form hook\n\n  const [valid, setValid] = useState(true); // valid hook\n\n  const onSubmit = data => {\n    handleUser(data);\n  };\n\n  const handleUser = userInfo => {\n    delete userInfo.confirmPassword;\n    userInfo[\"cash\"] = STARTCASH;\n    console.log(userInfo);\n    fetch(BASEBACKENDURL + \"signup\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userInfo\n      })\n    }).then(resp => resp.json()).then(user => {\n      if (user.email) {\n        // if user has an email go to main page\n        props.history.push('/');\n      } else {\n        // user has no email so error\n        setValid(false);\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"registerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"registerForm\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"registerHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    placeholder: \"name\",\n    name: \"name\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), errors.name && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"name is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    placeholder: \"email\",\n    type: \"email\",\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"email is required\"), !valid && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"email is already been taken\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"password is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    type: \"password\",\n    placeholder: \"confirm password\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: true,\n      validate: password => password === watch('password')\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), errors.confirmPassword && errors.confirmPassword.type === \"required\" && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"confirm password is required\"), errors.confirmPassword && errors.confirmPassword.type === \"validate\" && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"passwords do not match\"), React.createElement(\"input\", {\n    className: \"registerButton\",\n    type: \"submit\",\n    value: \"Sign UP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })));\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Register.js"],"names":["React","useState","useForm","BASEBACKENDURL","STARTCASH","Register","props","register","handleSubmit","errors","watch","valid","setValid","onSubmit","data","handleUser","userInfo","confirmPassword","console","log","fetch","method","headers","body","JSON","stringify","then","resp","json","user","email","history","push","required","name","password","validate","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,EAAyBC,SAAzB,QAA0C,cAA1C;AACA,OAAO,qBAAP;;AACA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,MAA1B;AAAkCC,IAAAA;AAAlC,MAA4CR,OAAO,EAAzD,CADuB,CACuC;;AAC9D,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC,CAFuB,CAEuC;;AAE9D,QAAMY,QAAQ,GAAGC,IAAI,IAAI;AACvBC,IAAAA,UAAU,CAACD,IAAD,CAAV;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAIC,QAAD,IAAc;AAC/B,WAAOA,QAAQ,CAACC,eAAhB;AACAD,IAAAA,QAAQ,CAAC,MAAD,CAAR,GAAmBZ,SAAnB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,IAAAA,KAAK,CAACjB,cAAc,GAAG,QAAlB,EAA4B;AAC/BkB,MAAAA,MAAM,EAAE,MADuB;AAE/BC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAFsB;AAM/BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBT,QAAAA;AADmB,OAAf;AANyB,KAA5B,CAAL,CAUCU,IAVD,CAUMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAVd,EAWCF,IAXD,CAWMG,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,KAAT,EAAgB;AAAY;AAC1BxB,QAAAA,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACD,OAFD,MAGK;AAAuB;AAC1BpB,QAAAA,QAAQ,CAAC,KAAD,CAAR;AACD;AACF,KAlBD;AAmBD,GAvBD;;AAyBA,SACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,QAAQ,EAAEJ,YAAY,CAACK,QAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,EAAE,EAAC,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,WAAW,EAAC,MAA7C;AAAoD,IAAA,IAAI,EAAC,MAAzD;AAAgE,IAAA,GAAG,EAAEN,QAAQ,CAAC;AAAE0B,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKxB,MAAM,CAACyB,IAAP,IAAe;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHpB,EAKI;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,WAAW,EAAC,OAA7C;AAAqD,IAAA,IAAI,EAAC,OAA1D;AAAkE,IAAA,IAAI,EAAC,OAAvE;AAA+E,IAAA,GAAG,EAAE3B,QAAQ,CAAC;AAAE0B,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMKxB,MAAM,CAACqB,KAAP,IAAgB;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANrB,EAOK,CAACnB,KAAD,IAAU;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAPf,EASI;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,WAAW,EAAC,UAA7D;AAAuE,IAAA,IAAI,EAAC,UAA5E;AAAuF,IAAA,GAAG,EAAEJ,QAAQ,CAAC;AAAE0B,MAAAA,QAAQ,EAAC;AAAX,KAAD,CAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUKxB,MAAM,CAAC0B,QAAP,IAAmB;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVxB,EAYI;AAAO,IAAA,SAAS,EAAC,eAAjB;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,WAAW,EAAC,kBAA7D;AAAgF,IAAA,IAAI,EAAC,iBAArF;AAAuG,IAAA,GAAG,EAAE5B,QAAQ,CAAC;AACjH0B,MAAAA,QAAQ,EAAE,IADuG;AAEjHG,MAAAA,QAAQ,EAAED,QAAQ,IAAIA,QAAQ,KAAKzB,KAAK,CAAC,UAAD;AAFyE,KAAD,CAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,EAgBKD,MAAM,CAACQ,eAAP,IAA0BR,MAAM,CAACQ,eAAP,CAAuBoB,IAAvB,KAAgC,UAA1D,IAAwE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAhB7E,EAiBK5B,MAAM,CAACQ,eAAP,IAA0BR,MAAM,CAACQ,eAAP,CAAuBoB,IAAvB,KAAgC,UAA1D,IAAwE;AAAG,IAAA,SAAS,EAAC,sBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAjB7E,EAmBI;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAkC,IAAA,IAAI,EAAC,QAAvC;AAAgD,IAAA,KAAK,EAAC,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBJ,CADF,CADJ;AAyBD;;AAED,eAAehC,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useForm} from 'react-hook-form';\nimport { BASEBACKENDURL, STARTCASH } from '../constants';\nimport '../css/register.css';\nfunction Register(props) {\n  const { register, handleSubmit, errors, watch } = useForm();  // initialize form hook\n  const [valid, setValid] = useState(true);                     // valid hook\n\n  const onSubmit = data => {\n    handleUser(data); \n  };\n\n  const handleUser = (userInfo) => {\n    delete userInfo.confirmPassword;\n    userInfo[\"cash\"] = STARTCASH;\n    console.log(userInfo);\n    fetch(BASEBACKENDURL + \"signup\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\"\n      },\n      body: JSON.stringify({\n        userInfo\n      })\n    })\n    .then(resp => resp.json())\n    .then(user => {\n      if (user.email) {           // if user has an email go to main page\n        props.history.push('/')\n      }\n      else {                      // user has no email so error\n        setValid(false);          \n      }\n    })    \n  }\n\n  return (\n      <div className=\"registerContainer\">\n        <form className=\"registerForm\" onSubmit={handleSubmit(onSubmit)}>\n            <header id=\"registerHeader\">Register</header>\n            <input className=\"registerField\" placeholder=\"name\" name=\"name\" ref={register({ required: true})}/>\n            {errors.name && <p className=\"registerErrorMessage\">name is required</p>}\n            \n            <input className=\"registerField\" placeholder=\"email\" type=\"email\" name=\"email\" ref={register({ required: true })} />\n            {errors.email && <p className=\"registerErrorMessage\">email is required</p>}\n            {!valid && <p className=\"registerErrorMessage\">email is already been taken</p>}\n        \n            <input className=\"registerField\" type=\"password\" placeholder=\"password\"name=\"password\" ref={register({ required:true })} />\n            {errors.password && <p className=\"registerErrorMessage\">password is required</p>}\n        \n            <input className=\"registerField\" type=\"password\" placeholder=\"confirm password\" name=\"confirmPassword\" ref={register({\n                required: true,\n                validate: password => password === watch('password')\n            })} />\n            {errors.confirmPassword && errors.confirmPassword.type === \"required\" && <p className=\"registerErrorMessage\">confirm password is required</p>}\n            {errors.confirmPassword && errors.confirmPassword.type === \"validate\" && <p className=\"registerErrorMessage\">passwords do not match</p>}\n\n            <input className=\"registerButton\" type=\"submit\" value=\"Sign UP\" />\n        </form>\n    </div>\n  );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}