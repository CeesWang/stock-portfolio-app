{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/StockPortfolio.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/stockPortfolio.css';\nimport { SANDBOXURL, VERSION, APIKEY } from '../constants';\n\nfunction StockPortfolio(props) {\n  const [openPrice, setOpenPrice] = useState(0);\n  const [latestPrice, setLatestPrice] = useState(4);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchStockPrices();\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const fetchStockPrices = () => {\n    console.log(props.ticker);\n    fetch(SANDBOXURL + VERSION + `stock/${props.ticker}/quote?token=${APIKEY}`).then(resp => {\n      if (resp.ok) return resp.json();\n      throw response;\n    }).then(data => {\n      setOpenPrice(data.previousClose);\n      setLatestPrice(data.latestPrice);\n    }).catch(error => console.log(error));\n  };\n\n  const convertNumToCurrencyFormat = price => {\n    return price.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    });\n  };\n\n  const compareStockPrice = () => {// if(openPrice)\n  };\n\n  return props ? React.createElement(\"div\", {\n    className: \"stockPortfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"(\", props.ticker.toUpperCase(), \") - \", props.quantity, \" share(s)    \", React.createElement(\"span\", {\n    className: \"stockCurrentPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, convertNumToCurrencyFormat(props.price))), React.createElement(\"div\", {\n    className: \"stockOpenPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"open price:       \", convertNumToCurrencyFormat(openPrice), \" \"), React.createElement(\"div\", {\n    className: \"stockLatestPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"latest price:     \", convertNumToCurrencyFormat(latestPrice))) : null;\n}\n\nexport default StockPortfolio;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/StockPortfolio.js"],"names":["React","useState","useEffect","SANDBOXURL","VERSION","APIKEY","StockPortfolio","props","openPrice","setOpenPrice","latestPrice","setLatestPrice","interval","setInterval","fetchStockPrices","clearInterval","console","log","ticker","fetch","then","resp","ok","json","response","data","previousClose","catch","error","convertNumToCurrencyFormat","price","toLocaleString","style","currency","compareStockPrice","toUpperCase","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,2BAAP;AACA,SAAQC,UAAR,EAAoBC,OAApB,EAA6BC,MAA7B,QAA0C,cAA1C;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BR,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAiCV,QAAQ,CAAC,CAAD,CAA/C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BC,MAAAA,gBAAgB;AACnB,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAM;AACTC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFH;AAGH,GAPQ,EAON,EAPM,CAAT;;AAQA,QAAME,gBAAgB,GAAG,MAAM;AAC3BE,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,MAAlB;AACAC,IAAAA,KAAK,CAAChB,UAAU,GAAGC,OAAb,GAAwB,SAAQG,KAAK,CAACW,MAAO,gBAAeb,MAAO,EAApE,CAAL,CACCe,IADD,CACMC,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,EAAT,EACI,OAAOD,IAAI,CAACE,IAAL,EAAP;AACJ,YAAMC,QAAN;AACH,KALD,EAMCJ,IAND,CAMMK,IAAI,IAAI;AACVhB,MAAAA,YAAY,CAACgB,IAAI,CAACC,aAAN,CAAZ;AACAf,MAAAA,cAAc,CAACc,IAAI,CAACf,WAAN,CAAd;AACH,KATD,EAUCiB,KAVD,CAUOC,KAAK,IACRZ,OAAO,CAACC,GAAR,CAAYW,KAAZ,CAXJ;AAaH,GAfD;;AAiBA,QAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAC1C,WAAOA,KAAK,CAACC,cAAN,CAAqB,OAArB,EAA8B;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA9B,CAAP;AACH,GAFD;;AAGA,QAAMC,iBAAiB,GAAG,MAAM,CAC5B;AACH,GAFD;;AAIA,SACI3B,KAAK,GACL;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,KAAK,CAACW,MAAN,CAAaiB,WAAb,EAAP,UAAuC5B,KAAK,CAAC6B,QAA7C,mBAAmE;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCP,0BAA0B,CAACtB,KAAK,CAACuB,KAAP,CAA/D,CAAnE,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmDD,0BAA0B,CAACrB,SAAD,CAA7E,MAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqDqB,0BAA0B,CAACnB,WAAD,CAA/E,CAHJ,CADK,GAQL,IATJ;AAWH;;AAED,eAAeJ,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/stockPortfolio.css';\nimport {SANDBOXURL, VERSION, APIKEY} from '../constants';\n\nfunction StockPortfolio(props) {\n    const [openPrice, setOpenPrice ] = useState(0);\n    const [latestPrice, setLatestPrice ] = useState(4);\n    \n    useEffect(() => {\n        const interval = setInterval(() => {\n            fetchStockPrices();\n        }, 2000);\n        return () => {\n            clearInterval(interval);\n          };\n    }, []);\n    const fetchStockPrices = () => {\n        console.log(props.ticker);\n        fetch(SANDBOXURL + VERSION + `stock/${props.ticker}/quote?token=${APIKEY}`)\n        .then(resp => {\n            if (resp.ok)\n                return resp.json()\n            throw response;\n        })\n        .then(data => {\n            setOpenPrice(data.previousClose)\n            setLatestPrice(data.latestPrice)\n        })\n        .catch(error =>\n            console.log(error)\n            )\n    }\n\n    const convertNumToCurrencyFormat = (price) => {\n        return price.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n    const compareStockPrice = () => {\n        // if(openPrice)\n    }\n\n    return (\n        props ? (  \n        <div className=\"stockPortfolio\">\n            <div>({props.ticker.toUpperCase()}) - {props.quantity} share(s)    <span className=\"stockCurrentPrice\">{convertNumToCurrencyFormat(props.price)}</span></div>\n            <div className=\"stockOpenPrice\">open price:       {convertNumToCurrencyFormat(openPrice)} </div>\n            <div className=\"stockLatestPrice\">latest price:     {convertNumToCurrencyFormat(latestPrice)}</div>\n        </div>\n        )\n        : \n        null\n    );\n}\n\nexport default StockPortfolio;"]},"metadata":{},"sourceType":"module"}