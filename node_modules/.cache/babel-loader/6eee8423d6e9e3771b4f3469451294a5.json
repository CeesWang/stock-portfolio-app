{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { BASEBACKENDURL } from '../constants';\nimport '../css/login.css';\n\nfunction Login(props) {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [valid, setValid] = useState(true);\n\n  const onSubmit = data => {\n    handleLogin(data);\n  };\n\n  const handleLogin = loginInfo => {\n    fetch(BASEBACKENDURL + 'login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        loginInfo\n      })\n    }).then(resp => resp.json()).then(data => {\n      console.log(data);\n\n      if (Array.isArray(data) && data.length > 0) {\n        // if user has an email go to main page\n        let userInfo = {\n          \"name\": data.user.name,\n          \"email\": data.user.email,\n          \"cash\": data.user.cash,\n          \"userID\": data.user.id,\n          \"stocksWorth\": data.stocksWorth,\n          \"stocks\": data.stocks\n        };\n        props.setUser(userInfo);\n        props.history.push('/portfolio');\n      } else {\n        // user has no email so error\n        setValid(false);\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"loginContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"loginForm\",\n    onClick: () => setValid(true),\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"loginHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Sign IN\"), React.createElement(\"input\", {\n    className: \"loginField\",\n    placeholder: \"email\",\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"email is required\"), React.createElement(\"input\", {\n    className: \"loginField\",\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"password is required\"), !valid && React.createElement(\"p\", {\n    className: \"loginErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"username or password is incorrect\"), React.createElement(\"input\", {\n    className: \"loginButton\",\n    type: \"submit\",\n    value: \"Login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"loginSignup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Don't have an account? \", React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Sign up now\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Login.js"],"names":["React","useState","useForm","Link","BASEBACKENDURL","Login","props","register","handleSubmit","errors","valid","setValid","onSubmit","data","handleLogin","loginInfo","fetch","method","headers","body","JSON","stringify","then","resp","json","console","log","Array","isArray","length","userInfo","user","name","email","cash","id","stocksWorth","stocks","setUser","history","push","required","password"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { BASEBACKENDURL } from '../constants';\nimport '../css/login.css'\n\nfunction Login (props) {\n    const { register, handleSubmit, errors } = useForm();\n    const [valid, setValid] = useState(true);\n    const onSubmit = data => {\n        handleLogin(data);\n    };\n\n    const handleLogin = (loginInfo) => {\n        fetch(BASEBACKENDURL + 'login',{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            body: JSON.stringify({\n                loginInfo\n            })\n        })\n        .then(resp => resp.json())\n        .then(data => {\n            console.log(data);\n            if (Array.isArray(data) && data.length > 0) {           // if user has an email go to main page\n                let userInfo = {\n                    \"name\": data.user.name, \n                    \"email\": data.user.email, \n                    \"cash\": data.user.cash, \n                    \"userID\": data.user.id, \n                    \"stocksWorth\": data.stocksWorth,\n                    \"stocks\": data.stocks, \n                }\n                props.setUser(userInfo);\n                props.history.push('/portfolio');\n            }\n              else {                      // user has no email so error\n                setValid(false);          \n            }\n        })\n    }\n    \n    return (\n        <div className=\"loginContainer\">\n          <form className=\"loginForm\" onClick={() => setValid(true)} onSubmit={handleSubmit(onSubmit)}>\n              <header id=\"loginHeader\">Sign IN</header>\n              <input className=\"loginField\" placeholder=\"email\" name=\"email\" ref={register({ required: true })} />\n              {errors.email && <p className=\"loginErrorMessage\">email is required</p>}\n          \n              <input className=\"loginField\" type=\"password\" placeholder=\"password\"name=\"password\" ref={register({ required:true })} />\n              {errors.password && <p className=\"loginErrorMessage\">password is required</p>}\n              {!valid && <p className=\"loginErrorMessage\">username or password is incorrect</p>}\n  \n              <input className=\"loginButton\" type=\"submit\" value=\"Login\" />\n              <label className=\"loginSignup\">Don't have an account? <Link to=\"/signup\">Sign up now</Link></label>\n          </form>\n      </div>\n    );\n}\n\nexport default Login; "]},"metadata":{},"sourceType":"module"}