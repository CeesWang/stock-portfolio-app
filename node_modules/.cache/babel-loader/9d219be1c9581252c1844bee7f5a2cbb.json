{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/StockPortfolio.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/stockPortfolio.css';\nimport { SANDBOXURL, VERSION, APIKEY } from '../constants';\n\nfunction StockPortfolio(props) {\n  const [openPrice, setOpenPrice] = useState(\"\");\n  const [latestPrice, setLatestPrice] = useState(\"\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      fetchStockPrices();\n    }, 2000);\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  const fetchStockPrices = () => {\n    fetch(SANDBOXURL + VERSION + `stock/${props.ticker}/quote?token=${APIKEY}`).then(resp => {\n      if (resp.ok) return resp.json();\n      throw resp;\n    }).then(data => {\n      setOpenPrice(data.previousClose);\n      setLatestPrice(data.latestPrice);\n    }).catch(error => {\n      console.log();\n    });\n  };\n\n  const convertNumToCurrencyFormat = price => {\n    return price.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    });\n  };\n\n  const compareStockPrice = () => {\n    if (latestPrice > openPrice) {\n      return \"green\";\n    }\n\n    if (latestPrice === openPrice) {\n      return \"grey\";\n    }\n\n    return \"red\";\n  };\n\n  return props ? React.createElement(\"div\", {\n    className: \"stockPortfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"(\", props.ticker.toUpperCase(), \") - \", props.quantity, \" share(s)    \", React.createElement(\"span\", {\n    className: \"stockCurrentPrice \" + compareStockPrice(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, convertNumToCurrencyFormat(props.price * props.quantity))), React.createElement(\"div\", {\n    className: \"stockOpenPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"open price:       \", openPrice !== \"\" && convertNumToCurrencyFormat(openPrice * props.quantity), \" \"), React.createElement(\"div\", {\n    className: \"stockLatestPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"latest price:     \", latestPrice !== \"\" && convertNumToCurrencyFormat(latestPrice * props.quantity))) : null;\n}\n\nexport default StockPortfolio;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/StockPortfolio.js"],"names":["React","useState","useEffect","SANDBOXURL","VERSION","APIKEY","StockPortfolio","props","openPrice","setOpenPrice","latestPrice","setLatestPrice","interval","setInterval","fetchStockPrices","clearInterval","fetch","ticker","then","resp","ok","json","data","previousClose","catch","error","console","log","convertNumToCurrencyFormat","price","toLocaleString","style","currency","compareStockPrice","toUpperCase","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,2BAAP;AACA,SAAQC,UAAR,EAAoBC,OAApB,EAA6BC,MAA7B,QAA0C,cAA1C;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAiCV,QAAQ,CAAC,EAAD,CAA/C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BC,MAAAA,gBAAgB;AACnB,KAF2B,EAEzB,IAFyB,CAA5B;AAGA,WAAO,MAAM;AACTC,MAAAA,aAAa,CAACH,QAAD,CAAb;AACD,KAFH;AAGH,GAPQ,EAON,EAPM,CAAT;;AAQA,QAAME,gBAAgB,GAAG,MAAM;AAC3BE,IAAAA,KAAK,CAACb,UAAU,GAAGC,OAAb,GAAwB,SAAQG,KAAK,CAACU,MAAO,gBAAeZ,MAAO,EAApE,CAAL,CACCa,IADD,CACMC,IAAI,IAAI;AACV,UAAIA,IAAI,CAACC,EAAT,EACI,OAAOD,IAAI,CAACE,IAAL,EAAP;AACJ,YAAMF,IAAN;AACH,KALD,EAMCD,IAND,CAMMI,IAAI,IAAI;AACVb,MAAAA,YAAY,CAACa,IAAI,CAACC,aAAN,CAAZ;AACAZ,MAAAA,cAAc,CAACW,IAAI,CAACZ,WAAN,CAAd;AACH,KATD,EAUCc,KAVD,CAUOC,KAAK,IAAG;AACXC,MAAAA,OAAO,CAACC,GAAR;AACH,KAZD;AAaH,GAdD;;AAgBA,QAAMC,0BAA0B,GAAIC,KAAD,IAAW;AAC1C,WAAOA,KAAK,CAACC,cAAN,CAAqB,OAArB,EAA8B;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA9B,CAAP;AACH,GAFD;;AAGA,QAAMC,iBAAiB,GAAG,MAAM;AAC5B,QAAGvB,WAAW,GAAGF,SAAjB,EAA4B;AACxB,aAAO,OAAP;AACH;;AACD,QAAGE,WAAW,KAAKF,SAAnB,EAA8B;AAC1B,aAAO,MAAP;AACH;;AACD,WAAO,KAAP;AACH,GARD;;AAUA,SACID,KAAK,GACL;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,KAAK,CAACU,MAAN,CAAaiB,WAAb,EAAP,UAAuC3B,KAAK,CAAC4B,QAA7C,mBAAmE;AAAM,IAAA,SAAS,EAAE,uBAAuBF,iBAAiB,EAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8DL,0BAA0B,CAACrB,KAAK,CAACsB,KAAN,GAActB,KAAK,CAAC4B,QAArB,CAAxF,CAAnE,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmD3B,SAAS,KAAK,EAAd,IAAoBoB,0BAA0B,CAACpB,SAAS,GAAGD,KAAK,CAAC4B,QAAnB,CAAjG,MAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqDzB,WAAW,KAAK,EAAhB,IAAsBkB,0BAA0B,CAAClB,WAAW,GAAGH,KAAK,CAAC4B,QAArB,CAArG,CAHJ,CADK,GAQL,IATJ;AAWH;;AAED,eAAe7B,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/stockPortfolio.css';\nimport {SANDBOXURL, VERSION, APIKEY} from '../constants';\n\nfunction StockPortfolio(props) {\n    const [openPrice, setOpenPrice ] = useState(\"\");\n    const [latestPrice, setLatestPrice ] = useState(\"\");\n    \n    useEffect(() => {\n        const interval = setInterval(() => {\n            fetchStockPrices();\n        }, 2000);\n        return () => {\n            clearInterval(interval);\n          };\n    }, []);\n    const fetchStockPrices = () => {\n        fetch(SANDBOXURL + VERSION + `stock/${props.ticker}/quote?token=${APIKEY}`)\n        .then(resp => {\n            if (resp.ok)\n                return resp.json()\n            throw resp;\n        })\n        .then(data => {\n            setOpenPrice(data.previousClose)\n            setLatestPrice(data.latestPrice)\n        })\n        .catch(error =>{\n            console.log()\n        })\n    }\n\n    const convertNumToCurrencyFormat = (price) => {\n        return price.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n    const compareStockPrice = () => {\n        if(latestPrice > openPrice) {\n            return \"green\"\n        }\n        if(latestPrice === openPrice) {\n            return \"grey\"\n        }\n        return \"red\"\n    }\n\n    return (\n        props ? (  \n        <div className=\"stockPortfolio\">\n            <div>({props.ticker.toUpperCase()}) - {props.quantity} share(s)    <span className={\"stockCurrentPrice \" + compareStockPrice()}>{convertNumToCurrencyFormat(props.price * props.quantity)}</span></div>\n            <div className=\"stockOpenPrice\">open price:       {openPrice !== \"\" && convertNumToCurrencyFormat(openPrice * props.quantity)} </div>\n            <div className=\"stockLatestPrice\">latest price:     {latestPrice !== \"\" && convertNumToCurrencyFormat(latestPrice * props.quantity)}</div>\n        </div>\n        )\n        : \n        null\n    );\n}\n\nexport default StockPortfolio;"]},"metadata":{},"sourceType":"module"}