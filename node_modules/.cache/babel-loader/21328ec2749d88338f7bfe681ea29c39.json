{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Register.js\";\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport '../css/register.css';\n\nfunction Register() {\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm(); // initialise the hook\n\n  const onSubmit = data => {\n    console.log(data);\n  };\n\n  const validatePassword = () => {\n    if (errors.password === '' || errors.confirmPassword === '' || errors.password === errors.confirmPassword) {\n      return false;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"registerContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"registerForm\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"registerHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Register\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    placeholder: \"name\",\n    name: \"name\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), errors.name && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Name is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    placeholder: \"email\",\n    name: \"email\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), errors.email && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Email is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    type: \"password\",\n    placeholder: \"password\",\n    name: \"password\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), errors.password && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"password is required\"), React.createElement(\"input\", {\n    className: \"registerField\",\n    type: \"password\",\n    placeholder: \"confirm password\",\n    name: \"confirmPassword\",\n    ref: register({\n      required: true\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), errors.confirmPassword && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"This is required\"), errors.confirmPassword === '' && errors.confirmPassword !== errors.password && React.createElement(\"p\", {\n    className: \"registerErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"TESETINGIEWNINWEIJFWEF required\"), React.createElement(\"input\", {\n    className: \"registerButton\",\n    type: \"submit\",\n    value: \"Sign UP\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Register.js"],"names":["React","useForm","Register","register","handleSubmit","errors","onSubmit","data","console","log","validatePassword","password","confirmPassword","required","name","email"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {useForm} from 'react-hook-form';\nimport '../css/register.css'\n\nfunction Register() {\n  const { register, handleSubmit, errors } = useForm(); // initialise the hook\n  const onSubmit = data => {\n    console.log(data);\n  };\n  const validatePassword = () => {\n      if (errors.password === '' || errors.confirmPassword === '' || errors.password === errors.confirmPassword) {\n          return false;\n      }\n\n  }\n\n  return (\n      <div className=\"registerContainer\">\n        <form className=\"registerForm\" onSubmit={handleSubmit(onSubmit)}>\n            <header id=\"registerHeader\">Register</header>\n            <input className=\"registerField\" placeholder=\"name\" name=\"name\" ref={register({ required: true})}/>\n            {errors.name && <p className=\"registerErrorMessage\">Name is required</p>}\n            \n            <input className=\"registerField\" placeholder=\"email\" name=\"email\" ref={register({ required: true })} />\n            {errors.email && <p className=\"registerErrorMessage\">Email is required</p>}\n        \n            <input className=\"registerField\" type=\"password\" placeholder=\"password\"name=\"password\" ref={register({ required:true })} />\n            {errors.password && <p className=\"registerErrorMessage\">password is required</p>}\n        \n            <input className=\"registerField\" type=\"password\" placeholder=\"confirm password\" name=\"confirmPassword\" ref={register({ required: true })} />\n            {errors.confirmPassword && <p className=\"registerErrorMessage\">This is required</p>}\n            {errors.confirmPassword === '' && errors.confirmPassword !== errors.password && <p className=\"registerErrorMessage\">TESETINGIEWNINWEIJFWEF required</p>}\n\n            <input className=\"registerButton\" type=\"submit\" value=\"Sign UP\" />\n        </form>\n    </div>\n  );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}