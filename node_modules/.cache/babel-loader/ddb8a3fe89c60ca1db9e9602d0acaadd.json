{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Portfolio.js\";\nimport React, { useState } from 'react';\nimport Stock from './Stock';\nimport NavBar from './NavBar';\nimport '../css/portfolio.css';\nimport { APIKEY, SANDBOXURL, VERSION } from '../constants';\n\nfunction Portfolio(props) {\n  const [ticker, setTicker] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [validTicker, setValidTicker] = useState(true);\n\n  const handlePurchase = e => {\n    e.preventDefault();\n    getLatestPrice(ticker);\n  };\n\n  const getLatestPrice = stock => {\n    fetch(SANDBOXURL + VERSION + `stock/${stock}/price?token=${APIKEY}`).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      throw response;\n    }).then(price => {\n      setValidTicker(true);\n      console.log(price);\n    }).catch(error => {\n      setValidTicker(false, ticker);\n      console.log(error);\n    });\n  };\n\n  const renderOwnedStocks = () => {\n    let testing = [];\n\n    for (let i = 0; i < 10; ++i) {\n      testing.push(React.createElement(Stock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n\n    return testing;\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, Object.keys(props.user).length !== 0 && // check if user is loggedIn\n  React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"header\", {\n    className: \"portfolioHeader\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" Portfolio ($\", \") \"), React.createElement(\"div\", {\n    className: \"portfolioContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stocksContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"stocksList\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, renderOwnedStocks())), React.createElement(\"div\", {\n    className: \"portfolioDivider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"purchaseContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    id: \"wallet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Cash - $\", props.user.cash), React.createElement(\"form\", {\n    className: \"purchaseForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"purchaseField\",\n    type: \"text\",\n    placeholder: \"Ticker\",\n    onClick: e => set,\n    value: ticker,\n    onChange: e => setTicker(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    className: \"purchaseField\",\n    type: \"text\",\n    placeholder: \"Qty\",\n    value: quantity,\n    onChange: e => setQuantity(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), !validTicker && React.createElement(\"p\", {\n    className: \"purchaseErrorMessage\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \" \\\"\", incorrectTicker, \"\\\" not found\"), React.createElement(\"input\", {\n    className: \"purchaseButton\",\n    type: \"submit\",\n    value: \"Buy\",\n    onClick: e => handlePurchase(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))))));\n}\n\nexport default Portfolio;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/Portfolio.js"],"names":["React","useState","Stock","NavBar","APIKEY","SANDBOXURL","VERSION","Portfolio","props","ticker","setTicker","quantity","setQuantity","validTicker","setValidTicker","handlePurchase","e","preventDefault","getLatestPrice","stock","fetch","then","response","ok","json","price","console","log","catch","error","renderOwnedStocks","testing","i","push","Object","keys","user","length","cash","set","target","value","incorrectTicker"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Stock from './Stock';\nimport NavBar from './NavBar';\nimport '../css/portfolio.css';\nimport {APIKEY, SANDBOXURL,VERSION} from '../constants'\n\nfunction Portfolio(props) {\n    const [ticker, setTicker] = useState(\"\");\n    const [quantity, setQuantity] = useState(\"\");\n    const [validTicker, setValidTicker] = useState(true);\n    \n\n    const handlePurchase = (e) => {\n        e.preventDefault();\n        getLatestPrice(ticker);\n    }\n\n    const getLatestPrice = (stock) => {\n        fetch (SANDBOXURL + VERSION + `stock/${stock}/price?token=${APIKEY}`)\n        .then(response => {\n            if (response.ok) {\n                return response.json();\n            }\n            throw response;\n        })\n        .then(price => {\n            setValidTicker(true);\n            console.log(price);\n        })\n        .catch(error => {\n            setValidTicker(false,ticker);\n            console.log(error);\n        })\n    }\n\n    const renderOwnedStocks = () => {\n        let testing = [];\n        for (let i = 0; i < 10; ++i) {\n            testing.push(<Stock/>);\n        }\n        return testing;\n    }\n\n    return (\n        <div>\n            { Object.keys(props.user).length !== 0 && (         // check if user is loggedIn\n                <div>\n                    <NavBar/>                \n                    <header className=\"portfolioHeader\"> Portfolio (${}) </header>\n                    <div className=\"portfolioContainer\">\n                        <div className=\"stocksContainer\">\n                            <div className=\"stocksList\">\n                                {renderOwnedStocks()}\n                            </div>\n                        </div>\n                        <div className=\"portfolioDivider\"></div>\n                        <div className=\"purchaseContainer\">\n                            <header id=\"wallet\">Cash - ${props.user.cash}</header>\n                            <form className=\"purchaseForm\" >\n                                <input className=\"purchaseField\" type=\"text\" placeholder=\"Ticker\" onClick={e=>set} value={ticker} onChange={e => setTicker(e.target.value)} />\n                                <input className=\"purchaseField\" type=\"text\" placeholder=\"Qty\" value={quantity} onChange={e => setQuantity(e.target.value)} />\n                                {!validTicker && <p className=\"purchaseErrorMessage\"> \"{incorrectTicker}\" not found</p>}\n                                <input className=\"purchaseButton\" type=\"submit\" value=\"Buy\" onClick={e => handlePurchase(e)}/>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default Portfolio;"]},"metadata":{},"sourceType":"module"}