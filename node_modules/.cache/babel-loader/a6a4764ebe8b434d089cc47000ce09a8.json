{"ast":null,"code":"var _jsxFileName = \"/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/StockPortfolio.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../css/stockPortfolio.css';\nimport { SANDBOXURL, VERSION } from '../constants';\n\nfunction StockPortfolio(props) {\n  const [openPrice, setOpenPrice] = useState;\n  const [latestPrice, setLatestPrice] = useState(\"\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setOpenPrice(openPrice + 1);\n      setLatestPrice(latestPrice + 1); // fetchStockPrices();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const convertNumToCurrencyFormat = price => {\n    return price.toLocaleString('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    });\n  };\n\n  return props ? React.createElement(\"div\", {\n    className: \"stockPortfolio\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"(\", props.ticker.toUpperCase(), \") - \", props.quantity, \" share(s)    \", React.createElement(\"span\", {\n    className: \"stockCurrentPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, convertNumToCurrencyFormat(props.price))), React.createElement(\"div\", {\n    className: \"stockOpenPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"open price:       \", convertNumToCurrencyFormat(openPrice), \" \"), React.createElement(\"div\", {\n    className: \"stockLatestPrice\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"latest price:     \", convertNumToCurrencyFormat(latestPrice))) : null;\n}\n\nexport default StockPortfolio;","map":{"version":3,"sources":["/home/cees/code/labs/interviewProjects/stock-portfolio-app/stock-portfolio-app/src/components/StockPortfolio.js"],"names":["React","useState","useEffect","SANDBOXURL","VERSION","StockPortfolio","props","openPrice","setOpenPrice","latestPrice","setLatestPrice","interval","setInterval","clearInterval","convertNumToCurrencyFormat","price","toLocaleString","style","currency","ticker","toUpperCase","quantity"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,2BAAP;AACA,SAAQC,UAAR,EAAoBC,OAApB,QAAkC,cAAlC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA6BP,QAAnC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAiCT,QAAQ,CAAC,EAAD,CAA/C;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BJ,MAAAA,YAAY,CAACD,SAAS,GAAC,CAAX,CAAZ;AACAG,MAAAA,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd,CAF+B,CAG/B;AACH,KAJ2B,EAIzB,IAJyB,CAA5B;AAKA,WAAO,MAAMI,aAAa,CAACF,QAAD,CAA1B;AACH,GAPQ,EAON,EAPM,CAAT;;AAUA,QAAMG,0BAA0B,GAAIC,KAAD,IAAW;AAC1C,WAAOA,KAAK,CAACC,cAAN,CAAqB,OAArB,EAA8B;AAAEC,MAAAA,KAAK,EAAE,UAAT;AAAqBC,MAAAA,QAAQ,EAAE;AAA/B,KAA9B,CAAP;AACH,GAFD;;AAIA,SACIZ,KAAK,GACL;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOA,KAAK,CAACa,MAAN,CAAaC,WAAb,EAAP,UAAuCd,KAAK,CAACe,QAA7C,mBAAmE;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCP,0BAA0B,CAACR,KAAK,CAACS,KAAP,CAA/D,CAAnE,CADJ,EAEI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAmDD,0BAA0B,CAACP,SAAD,CAA7E,MAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqDO,0BAA0B,CAACL,WAAD,CAA/E,CAHJ,CADK,GAQL,IATJ;AAWH;;AAED,eAAeJ,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/stockPortfolio.css';\nimport {SANDBOXURL, VERSION} from '../constants';\n\nfunction StockPortfolio(props) {\n    const [openPrice, setOpenPrice ] = useState;\n    const [latestPrice, setLatestPrice ] = useState(\"\");\n    useEffect(() => {\n        const interval = setInterval(() => {\n            setOpenPrice(openPrice+1);\n            setLatestPrice(latestPrice+1);\n            // fetchStockPrices();\n        }, 2000);\n        return () => clearInterval(interval);\n    }, []);\n\n\n    const convertNumToCurrencyFormat = (price) => {\n        return price.toLocaleString('en-US', { style: 'currency', currency: 'USD' });\n    }\n\n    return (\n        props ? (  \n        <div className=\"stockPortfolio\">\n            <div>({props.ticker.toUpperCase()}) - {props.quantity} share(s)    <span className=\"stockCurrentPrice\">{convertNumToCurrencyFormat(props.price)}</span></div>\n            <div className=\"stockOpenPrice\">open price:       {convertNumToCurrencyFormat(openPrice)} </div>\n            <div className=\"stockLatestPrice\">latest price:     {convertNumToCurrencyFormat(latestPrice)}</div>\n        </div>\n        )\n        : \n        null\n    );\n}\n\nexport default StockPortfolio;"]},"metadata":{},"sourceType":"module"}